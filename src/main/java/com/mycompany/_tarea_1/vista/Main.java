package com.mycompany._tarea_1.vista;

import com.mycompany._tarea_1.controller.Controller;
import com.mycompany._tarea_1.modelo.Pacientes;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jonathan
 */
public class Main extends javax.swing.JFrame implements ActionListener {
    
    public int id_paciente=-1;
    
    public Main() {
        initComponents();
        BtnAgregar.addActionListener(this);
        BtnEliminar.addActionListener(this);
        BtnEditar.addActionListener(this);
        BtnEliminar.setEnabled(false);
        cargarDatatable();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        contenido = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPacientes = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TxtNombre = new javax.swing.JTextField();
        TxtEdad = new javax.swing.JTextField();
        TxtDiagnostico = new javax.swing.JTextField();
        TxtDireccion = new javax.swing.JTextField();
        TxtTelefono = new javax.swing.JTextField();
        BtnEliminar = new javax.swing.JButton();
        BtnEditar = new javax.swing.JButton();
        BtnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(850, 500));
        setResizable(false);
        setSize(new java.awt.Dimension(850, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(0, 153, 255));
        header.setPreferredSize(new java.awt.Dimension(800, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Sistema de registro de pacientes");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(253, 253, 253))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, -1));

        contenido.setBackground(new java.awt.Color(204, 204, 204));
        contenido.setPreferredSize(new java.awt.Dimension(850, 450));
        contenido.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Edad", "Diagnóstico", "Teléfono", "Dirección"
            }
        ));
        TablaPacientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TablaPacientes.setAutoscrolls(false);
        TablaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaPacientes);
        if (TablaPacientes.getColumnModel().getColumnCount() > 0) {
            TablaPacientes.getColumnModel().getColumn(0).setPreferredWidth(50);
            TablaPacientes.getColumnModel().getColumn(5).setPreferredWidth(130);
        }

        contenido.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 480, 199));

        jLabel2.setText("Nombre:");
        contenido.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 38, -1, -1));

        jLabel3.setText("Edad: ");
        contenido.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 96, -1, -1));

        jLabel4.setText("Diagnostico:");
        contenido.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 153, -1, -1));

        jLabel5.setText("Teléfono:");
        contenido.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 209, -1, -1));

        jLabel6.setText("Dirección:");
        contenido.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 268, -1, -1));
        contenido.add(TxtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 35, 250, -1));

        TxtEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtEdadKeyTyped(evt);
            }
        });
        contenido.add(TxtEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 93, 52, -1));
        contenido.add(TxtDiagnostico, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 150, 250, -1));
        contenido.add(TxtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 265, 250, -1));
        contenido.add(TxtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 206, 250, -1));

        BtnEliminar.setBackground(new java.awt.Color(0, 153, 255));
        BtnEliminar.setText("Eliminar paciente");
        BtnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEliminar.setPreferredSize(new java.awt.Dimension(150, 53));
        contenido.add(BtnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(627, 324, -1, -1));

        BtnEditar.setBackground(new java.awt.Color(0, 153, 255));
        BtnEditar.setText("Editar paciente");
        BtnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEditar.setPreferredSize(new java.awt.Dimension(150, 53));
        contenido.add(BtnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 324, -1, -1));

        BtnAgregar.setBackground(new java.awt.Color(0, 153, 255));
        BtnAgregar.setText("Agregar paciente");
        BtnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnAgregar.setMaximumSize(new java.awt.Dimension(115, 53));
        BtnAgregar.setPreferredSize(new java.awt.Dimension(150, 53));
        contenido.add(BtnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 324, -1, -1));

        getContentPane().add(contenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 850, 450));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TablaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPacientesMouseClicked
        if (TablaPacientes.getRowCount() <= 0) {
            JOptionPane.showConfirmDialog(null, "no hay datos para cargar");
        } else {
            //iguala la variable id_paciente al valor del ID de la fila seleccionada
            this.id_paciente = Integer.parseInt(TablaPacientes.getValueAt(TablaPacientes.getSelectedRow(), 0).toString());
            TxtNombre.setText(TablaPacientes.getValueAt(TablaPacientes.getSelectedRow(), 1).toString());
            TxtEdad.setText(TablaPacientes.getValueAt(TablaPacientes.getSelectedRow(), 2).toString());
            TxtDiagnostico.setText(TablaPacientes.getValueAt(TablaPacientes.getSelectedRow(), 3).toString());
            TxtTelefono.setText(TablaPacientes.getValueAt(TablaPacientes.getSelectedRow(), 4).toString());
            TxtDireccion.setText(TablaPacientes.getValueAt(TablaPacientes.getSelectedRow(), 5).toString());
            BtnEliminar.setEnabled(true);

        }
    }//GEN-LAST:event_TablaPacientesMouseClicked
    
    // Limita el texto solo a dígitos y la cantidad de dígitos a 3
    private void TxtEdadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtEdadKeyTyped
        char c = evt.getKeyChar();
        
        if(!(Character.isDigit(c))){
            evt.consume();
        }
        if(TxtEdad.getText().length() >= 3){
            evt.consume();
        }
    }//GEN-LAST:event_TxtEdadKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnEditar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JTable TablaPacientes;
    private javax.swing.JTextField TxtDiagnostico;
    private javax.swing.JTextField TxtDireccion;
    private javax.swing.JTextField TxtEdad;
    private javax.swing.JTextField TxtNombre;
    private javax.swing.JTextField TxtTelefono;
    public static javax.swing.JPanel contenido;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == BtnAgregar) {
            if (validacion(TxtNombre.getText()) || (validacion(TxtEdad.getText())) || (validacion(TxtDiagnostico.getText())) || (validacion(TxtTelefono.getText())) || (validacion(TxtDireccion.getText())) ) {
                JOptionPane.showMessageDialog(null, "Debe completar el formulario");
                return;
            } else {
                Pacientes pacientes = new Pacientes();
                
                pacientes.setNombre(TxtNombre.getText());
                pacientes.setEdad(Integer.parseInt(TxtEdad.getText()));
                pacientes.setDiagnostico(TxtDiagnostico.getText());
                pacientes.setTelefono(Integer.parseInt(TxtTelefono.getText()));
                pacientes.setDireccion(TxtDireccion.getText());
                
                Controller c = new Controller();
                try {
                    c.Guardar(pacientes);
                    JOptionPane.showMessageDialog(null, "Registro creado correctamente");
                    this.cargarDatatable();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Registro no fue realizado por " + ex.getMessage());
                }
            }
        }
        
        if (e.getSource() == BtnEliminar) {
            if (this.id_paciente != -1) {
                Controller c = new Controller();
                if (c.Eliminar(this.id_paciente)) {
                    cargarDatatable();
                    JOptionPane.showMessageDialog(null, "Registro eliminado exitosamente");
                } else {
                    JOptionPane.showMessageDialog(null, "No fue posible eliminar el registro");

                }
            }
        }
        
        if(e.getSource()==BtnEditar){
            if (this.id_paciente != -1) {            
                 Controller c = new Controller();
                 Pacientes pacientes = new Pacientes();
                 
                 pacientes.setNombre(TxtNombre.getText());
                 pacientes.setEdad(Integer.parseInt(TxtEdad.getText()));
                 pacientes.setDiagnostico(TxtDiagnostico.getText());
                 pacientes.setTelefono(Integer.parseInt(TxtTelefono.getText()));
                 pacientes.setDireccion(TxtDireccion.getText());
                 
                if (c.Editar(pacientes, this.id_paciente)) {
                    cargarDatatable();
                    JOptionPane.showMessageDialog(null, "Registro actualizado exitosamente");
                } else {
                    JOptionPane.showMessageDialog(null, "No fue posible actualizar el registro");
                }
            }
            else{
                
                JOptionPane.showMessageDialog(null,"No hay datos para editar");
            }
        }
        //reinicia los valores al final de cada operación
        this.id_paciente = -1;
        limpiarCampos();
        BtnEliminar.setEnabled(false);
    }
    
    //limpia los inputText luego de cada operación
    public void limpiarCampos(){
        TxtNombre.setText("");
        TxtEdad.setText("");
        TxtDiagnostico.setText("");
        TxtTelefono.setText("");
        TxtDireccion.setText("");
    }
    
    //carga los datos de la base de datos a la tabla
    public void cargarDatatable() {
        DefaultTableModel model = new DefaultTableModel();
        Controller c = new Controller();
        try {
            c.Consultar(model);
            TablaPacientes.setModel(model);
            TablaPacientes.getColumnModel().getColumn(0).setPreferredWidth(40);
            TablaPacientes.getColumnModel().getColumn(3).setPreferredWidth(120);
            TablaPacientes.getColumnModel().getColumn(5).setPreferredWidth(150);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "error al cargar los datos por:  " + ex.getMessage());
        }

    }
    
    //valida que los inputText no estén vacíos
    public boolean validacion(String texto){
      boolean res = false;      
       if (texto.isEmpty()) {
           return true;
       }
       return res;
   }
}
